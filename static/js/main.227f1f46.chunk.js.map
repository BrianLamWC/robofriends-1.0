{"version":3,"sources":["Components/Searchbox.js","Components/Card.js","Components/CardList.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Searchbox","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAU,sCACVC,KAAK,SACLC,YAAY,gBACZC,SAAWJ,OCKRK,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACI,sBAAKP,UAAU,+CAAf,UACI,qBAAKQ,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,aACrB,gCACI,oBAAIP,UAAU,KAAd,SAAoBK,IACpB,mBAAGL,UAAU,KAAb,SAAmBM,WCepBI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIT,KAAQM,EAAOG,GAAGT,KAClBC,MAASK,EAAOG,GAAGR,MACnBC,GAAMI,EAAOG,GAAGP,IAHTI,EAAOG,GAAGP,UCA9BQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,gEAQfC,KAAKC,SAAS,CAAEF,UAAW,M,+BAI3B,OAAIC,KAAKF,MAAMC,SACJ,+DAEJC,KAAKT,MAAMK,a,GAhBCM,IAAMC,WCqDlBC,G,wDA/CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAcD,EAAME,OAAOC,SAb3C,EAAKX,MAAQ,CACTZ,OAAQ,GACRqB,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAEf,OAAQ4B,S,+BAOrC,IAAD,EAC2Bd,KAAKF,MAA7BZ,EADH,EACGA,OAAQqB,EADX,EACWA,YAEVQ,EAAiB7B,EAAO8B,QAC1B,SAAAC,GACI,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASZ,EAAYW,kBAI7D,OAAQhC,EAAOkC,OAGX,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,aAAd,yBACA,cAAC,EAAD,CAAWD,aAAc0B,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAW6B,WAPrC,6C,GA7BUb,IAAMC,YCKTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,8BACE,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.227f1f46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Searchbox = ({ searchChange }) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue tc' \r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={ searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}200x200`}/>\r\n            <div>\r\n                <h2 className='f2'>{name}</h2>\r\n                <p className='f4'>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return(\r\n                        <Card\r\n                            key = {robots[i].id}\r\n                            name = {robots[i].name}\r\n                            email = {robots[i].email}\r\n                            id = {robots[i].id}\r\n                        />\r\n                     );\r\n                \r\n                })\r\n            }      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style = {{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError : true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops. That is not good to see</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React from 'react';\r\nimport Searchbox from '../Components/Searchbox.js'\r\nimport CardList from '../Components/CardList.js';\r\nimport Scroll from '../Components/Scroll.js';\r\nimport ErrorBoundry from '../Components/ErrorBoundry.js'\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }   \r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield : event.target.value })\r\n    }\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        \r\n        const filteredRobots = robots.filter(\r\n            robot=> {\r\n                return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            }\r\n        )\r\n\r\n        return !robots.length ?\r\n        <h1>Loading</h1> :    \r\n        (\r\n            <div className='tc'>\r\n                <h1 className=\"f-headline\">Robofriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots = { filteredRobots }/>\r\n                    </ErrorBoundry>\r\n                    \r\n                </Scroll>\r\n            </div>        \r\n        );\r\n    }\r\n}\r\n  \r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <div>\n      <App/>\n    </div>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}